============= TSTL Papers ==========

There are a few early papers on a version of TSTL with a less readable
(but still supported) syntax:

ISSTA tool paper on TSTL:

http://www.cs.cmu.edu/~agroce/issta15.pdf

NASA Formal Methods longer paper on TSTL:

http://www.cs.cmu.edu/~agroce/nfm15.pdf

Submitted journal paper on "modern" TSTL:

tstl.pdf (in this repository!)

The place to start is probably the last paper.  The others are
potentially useful reading as well, as are the .tstl files in the
tstl/examples directories on the TSTL github repo.

============= Test Generation Papers ==============

Some algorithms it might be very interesting to implement in TSTL:

Older approach using feedback and pools of objects (may be hard to implement
exactly this in TSTL, but it would be very interesting):

https://homes.cs.washington.edu/~mernst/pubs/feedback-testgen-icse2007.pdf

EvoSuite is a tool and algorithms for generating unit tests for Java.
Based on genetic/evolutionary algorithm approaches, quite complex by
now, many papers.  Very popular tool.  Would be very interesting to
see these methods in TSTL, compare to random etc.

http://www.evosuite.org/

Swarm testing:

Close to random testing, but much more effective in many settings (all
we have tried except for event-based testing of Android apps):

http://www.cs.cmu.edu/~agroce/issta12.pdf

Paper on suppression:

http://www.cs.cmu.edu/~agroce/issre13.pdf

ABP testing:

Machine-learning based attempt to improve testing.  Mixed results on
Java container classes.

http://www.cs.cmu.edu/~agroce/issre12.pdf


============= Analysis Papers =================

Well-known paper on how to do statistical experiments when using
randomized methods in SE, by two top-notch testing researchers:

https://www.simula.no/file/simulasimula670pdf/download

Paper from my group, gives an example of the "equal time" strategy for
comparing methods, lots of discovery curves for branches, etc.:

http://www.cs.cmu.edu/~agroce/issta14.pdf

Hamlet's paper on "Why random testing?"

http://web.cecs.pdx.edu/~hamlet/rt.pdf
